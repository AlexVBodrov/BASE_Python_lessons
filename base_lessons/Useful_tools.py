"""
Практическое задание
Решить с помощью генераторов списка.
1: Даны два списка фруктов. Получить список фруктов, присутствующих в обоих исходных списках.
 Примечание: Списки фруктов создайте вручную в начале файла.

a = ["яблоко", "ананас", "апельсин", "манго", "гранат", "мангостин"]
b = ["авокадо", "питахая", "папая", "ананас", "апельсин", "рамбутан"]
c = []
for _ in a:
    if _ in b:
        c.append(_)
d = [_ for _ in a if _ in b]
print(c)
print(d)
"""
"""

2: Дан список, заполненный произвольными числами.
Получить список из элементов исходного, удовлетворяющих следующим условиям:
Элемент кратен 3,
Элемент положительный,
Элемент не кратен 4.
Примечание: Список с целыми числами создайте вручную в начале файла. Не забудьте включить туда отрицательные числа.
 10-20 чисел в списке вполне достаточно.

list_numbers_1 = [-3, -4, -6, -16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12,
                  13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]
list_n3 = [_ for _ in list_numbers_1 if _ % 3 == 0 and _ > 0 and _ % 4 != 0]
print(list_n3)

"""
"""
3. Напишите функцию которая принимает на вход список.
Функция создает из этого списка новый список из квадратных корней чисел (если число положительное)
и самих чисел (если число отрицательное) и возвращает результат
(желательно применить генератор и тернарный оператор при необходимости).
В результате работы функции исходный список не должен измениться.
Например:
old_list = [1, -3, 4]
result = [1, -3, 2]
Примечание: Список с целыми числами создайте вручную в начале файла.
Не забудьте включить туда отрицательные числа. 10-20 чисел в списке вполне достаточно.
"""
list_numbers_1 = [-3, -4, -6, -16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12,
                  13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]

def sqrt_el_list(list):
    result = ['{:.3f}'.format((_ ** 0.5)) if _ > 0 else _ for _ in list]

    #for _ in list_numbers_1:
        #result.append(_) if _ < 0 else result.append('{:.2f}'.format((_ ** (0.5))))
    return result


print(list_numbers_1)
print(sqrt_el_list(list_numbers_1))



"""
4. Написать функцию которая принимает на вход число от 1 до 100.
Если число равно 13, функция поднимает исключительную ситуации ValueError
иначе возвращает введенное число, возведенное в квадрат.
Далее написать основной код программы.
Пользователь вводит число.
Введенное число передаем параметром в написанную функцию и печатаем результат, который вернула функция.
Обработать возможность возникновения исключительной ситуации, которая поднимается внутри функции.

num_1_100 = int(input("input 1 to 100 "))

def square_num_or_13(number):
    try:
        if number == 13:
            raise ValueError
        elif number < 0 or number > 100:
            raise Exception
        else:
            return (number ** 2)
    except ValueError:
        return "ValueError! , введено число 13 "
    except Exception as e:
        return "ошибка, возможно число не от 1 до 100 или другая ошибка: ", e

print(square_num_or_13(num_1_100))

"""